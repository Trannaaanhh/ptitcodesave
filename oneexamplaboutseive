#include <iostream>
#include <cmath>
using namespace std;

bool prime[100001];

void sieve()
{
    for (int i = 2; i <= 100000; i++)
    {
        prime[i] = true;
    }
    for (int i = 2; i <= sqrt(100000); i++)
    {
        if (prime[i])
        {
            for (int j = i * i; j <= 100000; j += i)
            {
                prime[j] = false;
            }
        }
    }
}

int main()
{
    sieve();
    for (int i = 2; i <= 100000; i++)
    {
        if (prime[i])
        {
            cout << i << " ";
        }
    }
    cout << endl;
}
/*********************************************************************************/
#include <iostream>
#include <bitset>
using namespace std;

int main() {
    int limit = 30;
    bitset<1000000> isPrime;
    isPrime.set();

    cout << 2 << " ";
    for (int i = 3; i <= limit; i += 2) {
        if (isPrime[i]) {
            cout << i << " ";
            for (int j = i * i; j <= limit; j += i * 2) {
                isPrime[j] = false;
            }
        }
    }
}
/*********************************************************************************/
#include <iostream>
#include <vector>
using namespace std;

int main() {
    int limit = 30;
    vector<bool> isPrime(limit + 1, true);

    for (int i = 2; i * i <= limit; i++) {
        if (isPrime[i]) {
            for (int j = i * i; j <= limit; j += i) {
                isPrime[j] = false;
            }
        }
    }

    for (int i = 2; i <= limit; i++) {
        if (isPrime[i]) {
            cout << i << " ";
        }
    }
}
